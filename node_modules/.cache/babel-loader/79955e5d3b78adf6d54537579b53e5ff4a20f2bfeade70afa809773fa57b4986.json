{"ast":null,"code":"import _slicedToArray from\"/home/ladliju/Developer/my-portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from\"react\";export var useInViewport=function useInViewport(elementRef,unobserveOnIntersect){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var _useState=useState(false),_useState2=_slicedToArray(_useState,2),intersect=_useState2[0],setIntersect=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isUnobserved=_useState4[0],setIsUnobserved=_useState4[1];useEffect(function(){if(!(elementRef!==null&&elementRef!==void 0&&elementRef.current))return;var observer=new IntersectionObserver(function(_ref){var _ref2=_slicedToArray(_ref,1),entry=_ref2[0];var isIntersecting=entry.isIntersecting,target=entry.target;setIntersect(isIntersecting);if(isIntersecting&&unobserveOnIntersect){observer.unobserve(target);setIsUnobserved(true);}},options);if(!isUnobserved){observer.observe(elementRef.current);}return function(){return observer.disconnect();};},[elementRef,unobserveOnIntersect,options,isUnobserved]);return intersect;};","map":{"version":3,"names":["useEffect","useState","useInViewport","elementRef","unobserveOnIntersect","options","intersect","setIntersect","isUnobserved","setIsUnobserved","current","observer","IntersectionObserver","entry","isIntersecting","target","unobserve","observe","disconnect"],"sources":["/home/ladliju/Developer/my-portfolio/src/hooks/useInViewport.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport const useInViewport = (\n    elementRef,\n    unobserveOnIntersect,\n    options = {}\n) => {\n    const [intersect, setIntersect] = useState(false);\n    const [isUnobserved, setIsUnobserved] = useState(false);\n\n    useEffect(() => {\n        if (!elementRef?.current) return;\n\n        const observer = new IntersectionObserver(([entry]) => {\n            const { isIntersecting, target } = entry;\n\n            setIntersect(isIntersecting);\n\n            if (isIntersecting && unobserveOnIntersect) {\n                observer.unobserve(target);\n                setIsUnobserved(true);\n            }\n        }, options);\n\n        if (!isUnobserved) {\n            observer.observe(elementRef.current);\n        }\n\n        return () => observer.disconnect();\n    }, [elementRef, unobserveOnIntersect, options, isUnobserved]);\n\n    return intersect;\n};\n"],"mappings":"0HAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAE3C,MAAO,IAAMC,cAAa,CAAG,QAAhBA,cAAa,CACtBC,UAAU,CACVC,oBAAoB,CAEnB,IADDC,QAAO,2DAAG,CAAC,CAAC,CAEZ,cAAkCJ,QAAQ,CAAC,KAAK,CAAC,wCAA1CK,SAAS,eAAEC,YAAY,eAC9B,eAAwCN,QAAQ,CAAC,KAAK,CAAC,yCAAhDO,YAAY,eAAEC,eAAe,eAEpCT,SAAS,CAAC,UAAM,CACZ,GAAI,EAACG,UAAU,SAAVA,UAAU,WAAVA,UAAU,CAAEO,OAAO,EAAE,OAE1B,GAAMC,SAAQ,CAAG,GAAIC,qBAAoB,CAAC,cAAa,kCAAXC,KAAK,UAC7C,GAAQC,eAAc,CAAaD,KAAK,CAAhCC,cAAc,CAAEC,MAAM,CAAKF,KAAK,CAAhBE,MAAM,CAE9BR,YAAY,CAACO,cAAc,CAAC,CAE5B,GAAIA,cAAc,EAAIV,oBAAoB,CAAE,CACxCO,QAAQ,CAACK,SAAS,CAACD,MAAM,CAAC,CAC1BN,eAAe,CAAC,IAAI,CAAC,CACzB,CACJ,CAAC,CAAEJ,OAAO,CAAC,CAEX,GAAI,CAACG,YAAY,CAAE,CACfG,QAAQ,CAACM,OAAO,CAACd,UAAU,CAACO,OAAO,CAAC,CACxC,CAEA,MAAO,kBAAMC,SAAQ,CAACO,UAAU,EAAE,GACtC,CAAC,CAAE,CAACf,UAAU,CAAEC,oBAAoB,CAAEC,OAAO,CAAEG,YAAY,CAAC,CAAC,CAE7D,MAAOF,UAAS,CACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}