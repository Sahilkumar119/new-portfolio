[{"/home/ladliju/Developer/new-portfolio/src/index.js":"1","/home/ladliju/Developer/new-portfolio/src/app/App.js":"2","/home/ladliju/Developer/new-portfolio/src/app/HelmetMeta.js":"3","/home/ladliju/Developer/new-portfolio/src/pages/Home.js":"4","/home/ladliju/Developer/new-portfolio/src/pages/PageNotFound.js":"5","/home/ladliju/Developer/new-portfolio/src/pages/Resume.js":"6","/home/ladliju/Developer/new-portfolio/src/utils/logCredits.js":"7","/home/ladliju/Developer/new-portfolio/src/components/theme/ThemeProvider.js":"8","/home/ladliju/Developer/new-portfolio/src/components/theme/ThemeToggle.js":"9","/home/ladliju/Developer/new-portfolio/src/components/theme/Themes.js":"10","/home/ladliju/Developer/new-portfolio/src/components/content/SocialIcons.js":"11","/home/ladliju/Developer/new-portfolio/src/components/content/Content.js":"12","/home/ladliju/Developer/new-portfolio/src/components/logo/LogoLink.js":"13","/home/ladliju/Developer/new-portfolio/src/components/background/DisplacementSphere.js":"14","/home/ladliju/Developer/new-portfolio/src/components/speedDial/SpeedDial.js":"15","/home/ladliju/Developer/new-portfolio/src/components/footer/FooterText.js":"16","/home/ladliju/Developer/new-portfolio/src/utils/getName.js":"17","/home/ladliju/Developer/new-portfolio/src/utils/transition.js":"18","/home/ladliju/Developer/new-portfolio/src/utils/style.js":"19","/home/ladliju/Developer/new-portfolio/src/hooks/usePrefersReducedMotion.js":"20","/home/ladliju/Developer/new-portfolio/src/utils/three.js":"21","/home/ladliju/Developer/new-portfolio/src/hooks/useInViewport.js":"22","/home/ladliju/Developer/new-portfolio/src/components/logo/Logo.js":"23","/home/ladliju/Developer/new-portfolio/src/components/content/TextDecrypt.js":"24","/home/ladliju/Developer/new-portfolio/src/components/background/sphereFragShader.js":"25","/home/ladliju/Developer/new-portfolio/src/components/background/sphereVertShader.js":"26","/home/ladliju/Developer/new-portfolio/src/pages/Blogs.js":"27","/home/ladliju/Developer/new-portfolio/src/pages/Projects.js":"28","/home/ladliju/Developer/new-portfolio/src/components/navigation/NavigationButtons.js":"29","/home/ladliju/Developer/new-portfolio/src/pages/BlogPost.js":"30","/home/ladliju/Developer/new-portfolio/src/data/projects.js":"31","/home/ladliju/Developer/new-portfolio/src/data/blogs.js":"32","/home/ladliju/Developer/new-portfolio/src/data/blogPosts.js":"33"},{"size":174,"mtime":1759143521000,"results":"34","hashOfConfig":"35"},{"size":1286,"mtime":1760872008386,"results":"36","hashOfConfig":"35"},{"size":649,"mtime":1759143521000,"results":"37","hashOfConfig":"35"},{"size":1213,"mtime":1760850590529,"results":"38","hashOfConfig":"35"},{"size":108,"mtime":1759143521000,"results":"39","hashOfConfig":"35"},{"size":94,"mtime":1759143521000,"results":"40","hashOfConfig":"35"},{"size":435,"mtime":1759143521000,"results":"41","hashOfConfig":"35"},{"size":1581,"mtime":1759143521000,"results":"42","hashOfConfig":"35"},{"size":1273,"mtime":1759143521000,"results":"43","hashOfConfig":"35"},{"size":4371,"mtime":1759143521000,"results":"44","hashOfConfig":"35"},{"size":1293,"mtime":1759143521000,"results":"45","hashOfConfig":"35"},{"size":1099,"mtime":1759143521000,"results":"46","hashOfConfig":"35"},{"size":1109,"mtime":1759143521000,"results":"47","hashOfConfig":"35"},{"size":7924,"mtime":1759143521000,"results":"48","hashOfConfig":"35"},{"size":1590,"mtime":1759143521000,"results":"49","hashOfConfig":"35"},{"size":952,"mtime":1759143521000,"results":"50","hashOfConfig":"35"},{"size":289,"mtime":1759143521000,"results":"51","hashOfConfig":"35"},{"size":399,"mtime":1759143521000,"results":"52","hashOfConfig":"35"},{"size":933,"mtime":1759143521000,"results":"53","hashOfConfig":"35"},{"size":167,"mtime":1759143521000,"results":"54","hashOfConfig":"35"},{"size":1113,"mtime":1759143521000,"results":"55","hashOfConfig":"35"},{"size":892,"mtime":1759143521000,"results":"56","hashOfConfig":"35"},{"size":546,"mtime":1759143521000,"results":"57","hashOfConfig":"35"},{"size":1331,"mtime":1759143521000,"results":"58","hashOfConfig":"35"},{"size":2187,"mtime":1759143521000,"results":"59","hashOfConfig":"35"},{"size":6473,"mtime":1759143521000,"results":"60","hashOfConfig":"35"},{"size":4943,"mtime":1760873465498,"results":"61","hashOfConfig":"35"},{"size":5517,"mtime":1760873404302,"results":"62","hashOfConfig":"35"},{"size":2055,"mtime":1760851269199,"results":"63","hashOfConfig":"35"},{"size":10340,"mtime":1760872008662,"results":"64","hashOfConfig":"35"},{"size":1505,"mtime":1760872745720,"results":"65","hashOfConfig":"35"},{"size":1248,"mtime":1760872745248,"results":"66","hashOfConfig":"35"},{"size":2076,"mtime":1760872745553,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"tnr1ij",{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"71"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"71"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ladliju/Developer/new-portfolio/src/index.js",[],[],[],"/home/ladliju/Developer/new-portfolio/src/app/App.js",[],[],"/home/ladliju/Developer/new-portfolio/src/app/HelmetMeta.js",[],[],"/home/ladliju/Developer/new-portfolio/src/pages/Home.js",[],[],"/home/ladliju/Developer/new-portfolio/src/pages/PageNotFound.js",[],[],"/home/ladliju/Developer/new-portfolio/src/pages/Resume.js",[],[],"/home/ladliju/Developer/new-portfolio/src/utils/logCredits.js",[],[],"/home/ladliju/Developer/new-portfolio/src/components/theme/ThemeProvider.js",[],[],"/home/ladliju/Developer/new-portfolio/src/components/theme/ThemeToggle.js",[],[],"/home/ladliju/Developer/new-portfolio/src/components/theme/Themes.js",[],[],"/home/ladliju/Developer/new-portfolio/src/components/content/SocialIcons.js",[],[],"/home/ladliju/Developer/new-portfolio/src/components/content/Content.js",[],[],"/home/ladliju/Developer/new-portfolio/src/components/logo/LogoLink.js",[],[],"/home/ladliju/Developer/new-portfolio/src/components/background/DisplacementSphere.js",[],[],"/home/ladliju/Developer/new-portfolio/src/components/speedDial/SpeedDial.js",[],[],"/home/ladliju/Developer/new-portfolio/src/components/footer/FooterText.js",[],[],"/home/ladliju/Developer/new-portfolio/src/utils/getName.js",[],[],"/home/ladliju/Developer/new-portfolio/src/utils/transition.js",[],[],"/home/ladliju/Developer/new-portfolio/src/utils/style.js",[],[],"/home/ladliju/Developer/new-portfolio/src/hooks/usePrefersReducedMotion.js",[],[],"/home/ladliju/Developer/new-portfolio/src/utils/three.js",[],[],"/home/ladliju/Developer/new-portfolio/src/hooks/useInViewport.js",[],[],"/home/ladliju/Developer/new-portfolio/src/components/logo/Logo.js",[],[],"/home/ladliju/Developer/new-portfolio/src/components/content/TextDecrypt.js",[],[],"/home/ladliju/Developer/new-portfolio/src/components/background/sphereFragShader.js",["171"],[],"export default `\n#define PHONG\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\nuniform float time;\nvarying vec2 vUv;\nvarying vec3 newPosition;\nvarying float noise;\n\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <envmap_physical_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n  #include <clipping_planes_fragment>\n\n  vec3 color = vec3(vUv * (0.2 - 2.0 * noise), 1.0);\n  vec3 finalColors = vec3(color.b * 1.5, color.r, color.r);\n  vec4 diffuseColor = vec4(cos(finalColors * noise * 3.0), 1.0);\n  ReflectedLight reflectedLight = ReflectedLight(vec3(0.0), vec3(0.0), vec3(0.0), vec3(0.0));\n  vec3 totalEmissiveRadiance = emissive;\n\n  #include <logdepthbuf_fragment>\n  #include <map_fragment>\n  #include <color_fragment>\n  #include <alphamap_fragment>\n  #include <alphatest_fragment>\n  #include <specularmap_fragment>\n  #include <normal_fragment_begin>\n  #include <normal_fragment_maps>\n  #include <emissivemap_fragment>\n  #include <lights_phong_fragment>\n  #include <lights_fragment_begin>\n  #include <lights_fragment_maps>\n  #include <lights_fragment_end>\n  #include <aomap_fragment>\n\n  vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n  #include <envmap_fragment>\n  #include <premultiplied_alpha_fragment>\n  #include <tonemapping_fragment>\n  #include <encodings_fragment>\n  #include <fog_fragment>\n\n  gl_FragColor = vec4(outgoingLight, diffuseColor.a);\n}\n`;\n","/home/ladliju/Developer/new-portfolio/src/components/background/sphereVertShader.js",["172"],[],"//\n// GLSL textureless classic 3D noise \"cnoise\",\n// with an RSL-style periodic variant \"pnoise\".\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\n// Version: 2011-10-11\n//\n// Many thanks to Ian McEwan of Ashima Arts for the\n// ideas for permutation and gradient selection.\n//\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\n// Distributed under the MIT license. See LICENSE file.\n// https://github.com/ashima/webgl-noise\n//\n\nexport default `\nvec3 mod289(vec3 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x)\n{\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec3 fade(vec3 t) {\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\n}\n\n// Classic Perlin noise\nfloat cnoise(vec3 P)\n{\n  vec3 Pi0 = floor(P); // Integer part for indexing\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n  Pi0 = mod289(Pi0);\n  Pi1 = mod289(Pi1);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n  return 2.2 * n_xyz;\n}\n\n// Classic Perlin noise, periodic variant\nfloat pnoise(vec3 P, vec3 rep)\n{\n  vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\n  vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\n  Pi0 = mod289(Pi0);\n  Pi1 = mod289(Pi1);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n  return 2.2 * n_xyz;\n}\n\nfloat turbulence(vec3 p) {\n  float w = 100.0;\n  float t = -.5;\n  for (float f = 1.0 ; f <= 10.0 ; f++) {\n    float power = pow(2.0, f);\n    t += abs(pnoise(vec3(power * p), vec3(10.0, 10.0, 10.0)) / power);\n  }\n  return t;\n}\n\n// START\nuniform float time;\nvarying vec2 vUv;\nvarying vec3 vNormal;\nvarying float noise;\n\nvarying vec3 vViewPosition;\n\nvoid main() {\n  #include <beginnormal_vertex>\n  #include <defaultnormal_vertex>\n  #include <begin_vertex>\n  #include <project_vertex>\n  #ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n    vNormal = normalize(transformedNormal);\n  #endif\n\n  vViewPosition = - mvPosition.xyz;\n\n  vUv = uv;\n\n  noise = turbulence(0.01 * position + normal + time * 0.8);\n  vec3 displacement = vec3((position.x) * noise, position.y * noise, position.z * noise);\n  gl_Position = projectionMatrix * modelViewMatrix * vec4((position + normal) + displacement, 1.0);\n}\n`;\n","/home/ladliju/Developer/new-portfolio/src/pages/Blogs.js",[],[],"/home/ladliju/Developer/new-portfolio/src/pages/Projects.js",[],[],"/home/ladliju/Developer/new-portfolio/src/components/navigation/NavigationButtons.js",[],[],"/home/ladliju/Developer/new-portfolio/src/pages/BlogPost.js",["173"],[],"import React from \"react\";\nimport {\n  Container,\n  Typography,\n  Box,\n  Chip,\n  Hidden,\n  Divider,\n} from \"@material-ui/core\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { LogoLink } from \"../components/logo/LogoLink\";\nimport { ThemeToggle } from \"../components/theme/ThemeToggle\";\nimport { FooterText } from \"../components/footer/FooterText\";\nimport { SocialIcons } from \"../components/content/SocialIcons\";\nimport { NavigationButtons } from \"../components/navigation/NavigationButtons\";\nimport DisplacementSphere from \"../components/background/DisplacementSphere\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextDecrypt } from \"../components/content/TextDecrypt\";\nimport { blogPosts } from \"../data/blogPosts\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"relative\",\n  },\n  content: {\n    marginTop: \"auto\",\n    marginBottom: \"auto\",\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n    zIndex: 1,\n  },\n  article: {\n    backgroundColor: \"rgba(255, 255, 255, 0.05)\",\n    backdropFilter: \"blur(10px)\",\n    border: `1px solid ${theme.palette.divider}`,\n    borderRadius: theme.spacing(2),\n    padding: theme.spacing(4),\n    marginTop: theme.spacing(4),\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(3),\n    },\n  },\n  header: {\n    marginBottom: theme.spacing(4),\n  },\n  title: {\n    fontWeight: 700,\n    marginBottom: theme.spacing(3),\n    lineHeight: 1.3,\n  },\n  meta: {\n    display: \"flex\",\n    alignItems: \"center\",\n    gap: theme.spacing(2),\n    marginBottom: theme.spacing(3),\n    flexWrap: \"wrap\",\n  },\n  tagContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    gap: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  chip: {\n    fontSize: \"0.75rem\",\n    height: \"24px\",\n  },\n  backButton: {\n    color: theme.palette.primary.main,\n    cursor: \"pointer\",\n    fontWeight: 600,\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(3),\n    transition: \"all 0.3s ease\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n      transform: \"translateX(-5px)\",\n    },\n    \"&:before\": {\n      content: '\"← \"',\n      marginRight: theme.spacing(1),\n    },\n  },\n  contentText: {\n    lineHeight: 1.8,\n    fontSize: \"1.1rem\",\n    marginTop: theme.spacing(4),\n    \"& p\": {\n      marginBottom: theme.spacing(3),\n    },\n    \"& h2\": {\n      marginTop: theme.spacing(5),\n      marginBottom: theme.spacing(2),\n      fontWeight: 600,\n      fontSize: \"2rem\",\n    },\n    \"& h3\": {\n      marginTop: theme.spacing(4),\n      marginBottom: theme.spacing(2),\n      fontWeight: 600,\n      fontSize: \"1.5rem\",\n    },\n    \"& code\": {\n      backgroundColor: \"rgba(0, 0, 0, 0.3)\",\n      padding: \"3px 8px\",\n      borderRadius: \"4px\",\n      fontFamily: \"'Courier New', monospace\",\n      fontSize: \"0.9em\",\n      color: theme.palette.primary.light,\n    },\n    \"& pre\": {\n      backgroundColor: \"rgba(0, 0, 0, 0.4)\",\n      padding: theme.spacing(3),\n      borderRadius: theme.spacing(1),\n      overflow: \"auto\",\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(3),\n      border: `1px solid ${theme.palette.divider}`,\n      \"& code\": {\n        backgroundColor: \"transparent\",\n        padding: 0,\n        color: theme.palette.text.primary,\n      },\n    },\n    \"& ul\": {\n      marginBottom: theme.spacing(3),\n      paddingLeft: theme.spacing(4),\n      \"& li\": {\n        marginBottom: theme.spacing(1),\n        lineHeight: 1.8,\n      },\n    },\n    \"& ol\": {\n      marginBottom: theme.spacing(3),\n      paddingLeft: theme.spacing(4),\n      \"& li\": {\n        marginBottom: theme.spacing(1),\n        lineHeight: 1.8,\n      },\n    },\n    \"& blockquote\": {\n      borderLeft: `4px solid ${theme.palette.primary.main}`,\n      paddingLeft: theme.spacing(3),\n      marginLeft: 0,\n      marginRight: 0,\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n      fontStyle: \"italic\",\n      backgroundColor: \"rgba(0, 0, 0, 0.2)\",\n      padding: theme.spacing(2, 3),\n      borderRadius: theme.spacing(1),\n      \"& p\": {\n        marginBottom: 0,\n      },\n    },\n    \"& strong\": {\n      fontWeight: 700,\n      color: theme.palette.primary.light,\n    },\n  },\n  notFound: {\n    textAlign: \"center\",\n    padding: theme.spacing(8, 2),\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport const BlogPost = () => {\n  const classes = useStyles();\n  const { slug } = useParams();\n  const history = useHistory();\n  const post = blogPosts[slug];\n\n  const handleBack = () => {\n    history.push(\"/blogs\");\n  };\n\n  if (!post) {\n    return (\n      <>\n        <div className={classes.root}>\n          <DisplacementSphere />\n          <LogoLink />\n          <ThemeToggle />\n          <Hidden smDown>\n            <SocialIcons />\n            <NavigationButtons />\n          </Hidden>\n\n          <Container className={classes.content} maxWidth=\"md\">\n            <Typography className={classes.backButton} onClick={handleBack}>\n              Back to Blogs\n            </Typography>\n            <Box className={classes.notFound}>\n              <Typography variant=\"h4\" gutterBottom>\n                Blog Post Not Found\n              </Typography>\n              <Typography variant=\"body1\">\n                The blog post you're looking for doesn't exist.\n              </Typography>\n            </Box>\n          </Container>\n\n          <FooterText />\n        </div>\n      </>\n    );\n  }\n\n  // Parse and render content\n  const renderContent = () => {\n    const sections = post.content.split(\"\\n\\n\");\n    return sections.map((section, index) => {\n      // Skip empty sections\n      if (!section.trim()) return null;\n\n      // Handle code blocks\n      if (section.trim().startsWith(\"```\")) {\n        const lines = section.trim().split(\"\\n\");\n        const language = lines[0].replace(\"```\", \"\");\n        const code = lines.slice(1, -1).join(\"\\n\");\n        return (\n          <pre key={index}>\n            <code>{code}</code>\n          </pre>\n        );\n      }\n\n      // Handle H2 headings\n      if (section.startsWith(\"## \")) {\n        return (\n          <Typography key={index} variant=\"h4\" component=\"h2\">\n            {section.replace(\"## \", \"\")}\n          </Typography>\n        );\n      }\n\n      // Handle H3 headings\n      if (section.startsWith(\"### \")) {\n        return (\n          <Typography key={index} variant=\"h5\" component=\"h3\">\n            {section.replace(\"### \", \"\")}\n          </Typography>\n        );\n      }\n\n      // Handle blockquotes\n      if (section.startsWith(\"> \")) {\n        const text = section.replace(/^> /gm, \"\");\n        return (\n          <blockquote key={index}>\n            <Typography\n              variant=\"body1\"\n              dangerouslySetInnerHTML={{ __html: formatInlineText(text) }}\n            />\n          </blockquote>\n        );\n      }\n\n      // Handle unordered lists\n      if (section.includes(\"\\n- \") || section.startsWith(\"- \")) {\n        const items = section\n          .split(\"\\n\")\n          .filter((line) => line.trim().startsWith(\"- \"));\n        return (\n          <ul key={index}>\n            {items.map((item, i) => (\n              <li\n                key={i}\n                dangerouslySetInnerHTML={{\n                  __html: formatInlineText(item.replace(/^- /, \"\")),\n                }}\n              />\n            ))}\n          </ul>\n        );\n      }\n\n      // Handle ordered lists\n      if (/^\\d+\\. /.test(section)) {\n        const items = section\n          .split(\"\\n\")\n          .filter((line) => /^\\d+\\. /.test(line.trim()));\n        return (\n          <ol key={index}>\n            {items.map((item, i) => (\n              <li\n                key={i}\n                dangerouslySetInnerHTML={{\n                  __html: formatInlineText(item.replace(/^\\d+\\. /, \"\")),\n                }}\n              />\n            ))}\n          </ol>\n        );\n      }\n\n      // Handle regular paragraphs\n      return (\n        <Typography\n          key={index}\n          variant=\"body1\"\n          paragraph\n          dangerouslySetInnerHTML={{ __html: formatInlineText(section) }}\n        />\n      );\n    });\n  };\n\n  // Format inline text (bold, inline code)\n  const formatInlineText = (text) => {\n    // Handle inline code\n    text = text.replace(/`([^`]+)`/g, \"<code>$1</code>\");\n    // Handle bold\n    text = text.replace(/\\*\\*([^*]+)\\*\\*/g, \"<strong>$1</strong>\");\n    return text;\n  };\n\n  return (\n    <>\n      <div className={classes.root}>\n        <DisplacementSphere />\n        <LogoLink />\n        <ThemeToggle />\n        <Hidden smDown>\n          <SocialIcons />\n          <NavigationButtons />\n        </Hidden>\n\n        <Container className={classes.content} maxWidth=\"md\">\n          <Typography className={classes.backButton} onClick={handleBack}>\n            Back to Blogs\n          </Typography>\n\n          <Box className={classes.article}>\n            <Box className={classes.header}>\n              <Typography variant=\"h3\" component=\"h1\" className={classes.title}>\n                <TextDecrypt text={post.title} />\n              </Typography>\n\n              <Box className={classes.meta}>\n                <Chip\n                  label={post.date}\n                  size=\"small\"\n                  className={classes.chip}\n                  variant=\"outlined\"\n                />\n                <Chip\n                  label={post.readTime}\n                  size=\"small\"\n                  className={classes.chip}\n                  variant=\"outlined\"\n                />\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  By {post.author}\n                </Typography>\n              </Box>\n\n              <Box className={classes.tagContainer}>\n                {post.tags.map((tag, index) => (\n                  <Chip\n                    key={index}\n                    label={tag}\n                    size=\"small\"\n                    className={classes.chip}\n                    color=\"primary\"\n                    variant=\"outlined\"\n                  />\n                ))}\n              </Box>\n            </Box>\n\n            <Divider />\n\n            <Box className={classes.contentText}>{renderContent()}</Box>\n          </Box>\n        </Container>\n\n        <FooterText />\n      </div>\n    </>\n  );\n};\n\nexport default BlogPost;\n","/home/ladliju/Developer/new-portfolio/src/data/projects.js",[],[],"/home/ladliju/Developer/new-portfolio/src/data/blogs.js",[],[],"/home/ladliju/Developer/new-portfolio/src/data/blogPosts.js",[],[],{"ruleId":"174","severity":1,"message":"175","line":1,"column":1,"nodeType":"176","endLine":72,"endColumn":3},{"ruleId":"174","severity":1,"message":"175","line":15,"column":1,"nodeType":"176","endLine":215,"endColumn":3},{"ruleId":"177","severity":1,"message":"178","line":224,"column":15,"nodeType":"179","messageId":"180","endLine":224,"endColumn":23},"import/no-anonymous-default-export","Assign literal to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'language' is assigned a value but never used.","Identifier","unusedVar"]